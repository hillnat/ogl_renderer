digraph "Transform::GetPosition"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [label="Transform::GetPosition",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Gets the position of this transform"];
  Node1 -> Node2 [dir="back",color="steelblue1",style="solid"];
  Node2 [label="Transform::LookAt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_transform.html#ac6fb2b3d5ac6c319fb1f66c2ecdbb8dc",tooltip="Points this transform at a given point"];
  Node1 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node3 [label="Physics::OverlapSpherePlane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_physics.html#a2da5a63c31a377c4feb2fb20e23aea09",tooltip="Checks if a sphere is overlapping a plane, and depenetrates"];
  Node1 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node4 [label="Scene::RenderAll",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_scene.html#af1231c8f794238d9fb79e5f413e0108f",tooltip="Draw all gameObjects using cameras[0] as a camera, accounting for all lights"];
  Node4 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node5 [label="main",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$main_8cpp.html#ae66f6b31b5ad750f1fe042a706a4e3d4",tooltip=" "];
  Node1 -> Node6 [dir="back",color="steelblue1",style="solid"];
  Node6 [label="Physics::ResolveSpherePlane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_physics.html#a736d261010f60931a23fb0ce91700225",tooltip="Resolves a collision between one sphere RigidBody and one plane RigidBody"];
  Node6 -> Node7 [dir="back",color="steelblue1",style="solid"];
  Node7 [label="Physics::UpdateAllBodies",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_physics.html#a5dcd928dfbdca3feaefc1d9ca070683a",tooltip="Executes the physics tick on all physics objects in vector"];
  Node7 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node8 [dir="back",color="steelblue1",style="solid"];
  Node8 [label="Physics::ResolveSphereSphere",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_physics.html#aa343c30848ec0030d0c73719cbcabc05",tooltip="Resolves a collision between two sphere Rigidbodies"];
  Node8 -> Node7 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node9 [dir="back",color="steelblue1",style="solid"];
  Node9 [label="Camera::viewMatrix",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera.html#ade59c8e9e1ccf81c92d69722ed070718",tooltip="Uses glm::lookAt to build a view matrix from cameraTransform"];
  Node9 -> Node4 [dir="back",color="steelblue1",style="solid"];
}
